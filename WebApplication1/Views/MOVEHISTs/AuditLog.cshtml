@model IEnumerable<WebApplication1.Models.MOVEHIST>

@{
    ViewBag.Title = "Audit Logs";
}

@*<h2>Audit Logs</h2>*@

<div id="loader" class="loader"></div>

<div class="form-horizontal d-flex flex-column p-5">
    <div>
        <h2 class="text-center">Audit Log</h2>
        <hr />

        <div class="d-flex flex-column small">
            <h6 class="text-center">Table Filters</h6>
            <div class="filters d-flex flex-row gap-1 col-12 small justify-content-center">
                <p class="col-1" id="tbId">ID</p>
                <p class="col-2" id="tbMac">MAC ADDRESS</p>
                <p class="col-2" id="tbType">TYPE</p>
                <p class="col-2" id="tbBy">ACTION_BY</p>
                <p class="col-1" id="tbUid">UID</p>
            </div>
            <div class="d-flex flex-row gap-3 justify-content-center">
                <div class="d-flex flex-row datePicker">
                    <p class="my-auto mx-3">From:</p>
                    <input type="text" id="start" name="start" placeholder="MM/DD/YYYY" class="date-range-filter form-control form-control-xs">
                </div>
                <div class="d-flex flex-row datePicker">
                    <p class="my-auto mx-3">To:</p>
                    <input type="text" id="end" name="end" placeholder="MM/DD/YYYY" class="date-range-filter form-control form-control-xs">
                </div>
            </div>
        </div>
    </div>

    <table id="tblAudit" class="table table-bordered table-striped table-light small dataTable">

        <thead>
            <tr>
                <th>ID</th>
                <th>MAC_ADD</th>
                <th>@Html.DisplayNameFor(model => model.TYPE)</th>
                <th>@Html.DisplayNameFor(model => model.OLD_DATA)</th>
                <th>@Html.DisplayNameFor(model => model.NEW_DATA)</th>
                <th>@Html.DisplayNameFor(model => model.OLD_SAL)</th>
                <th>@Html.DisplayNameFor(model => model.NEW_SAL)</th>
                <th>@Html.DisplayNameFor(model => model.D_ACTION)</th>
                <th>@Html.DisplayNameFor(model => model.T_ACTION)</th>
                <th>@Html.DisplayNameFor(model => model.DESCRIPTION)</th>
                <th>@Html.DisplayNameFor(model => model.ACTION_BY)</th>
                <th>UID</th>
            </tr>
        </thead>

        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.MOVEHIST_ID)</td>
                    <td>@Html.DisplayFor(modelItem => item.MAC_ADDRESS)</td>
                    <td>@Html.DisplayFor(modelItem => item.TYPE)</td>
                    <td>@Html.DisplayFor(modelItem => item.OLD_DATA)</td>
                    <td>@Html.DisplayFor(modelItem => item.NEW_DATA)</td>
                    <td>@Html.DisplayFor(modelItem => item.OLD_SAL)</td>
                    <td>@Html.DisplayFor(modelItem => item.NEW_SAL)</td>
                    <td>@Html.DisplayFor(modelItem => item.D_ACTION)</td>
                    <td>@Html.DisplayFor(modelItem => item.T_ACTION)</td>
                    <td>@Html.DisplayFor(modelItem => item.DESCRIPTION)</td>
                    <td>@Html.DisplayFor(modelItem => item.ACTION_BY)</td>
                    <td>@Html.DisplayFor(modelItem => item.Id)</td>
                </tr>
            }
        </tbody>

        <tfoot>
            <tr>
                <th>ID</th>
                <th>MAC_ADD</th>
                <th>@Html.DisplayNameFor(model => model.TYPE)</th>
                <th>@Html.DisplayNameFor(model => model.OLD_DATA)</th>
                <th>@Html.DisplayNameFor(model => model.NEW_DATA)</th>
                <th>@Html.DisplayNameFor(model => model.OLD_SAL)</th>
                <th>@Html.DisplayNameFor(model => model.NEW_SAL)</th>
                <th>@Html.DisplayNameFor(model => model.D_ACTION)</th>
                <th>@Html.DisplayNameFor(model => model.T_ACTION)</th>
                <th>@Html.DisplayNameFor(model => model.DESCRIPTION)</th>
                <th>@Html.DisplayNameFor(model => model.ACTION_BY)</th>
                <th>UID</th>
            </tr>
        </tfoot>

    </table>
    <p class="mx-auto">
        @Html.ActionLink("User Masterlist", "Index", "Users", new { area = "" }, new { @class = "btn btn-outline-primary" })
    </p>
</div>

@TempData["loading"];

<link href="~/Content/Loader.css" rel="stylesheet" />

@*Table Design and Features Imports*@

<link href="https://cdn.datatables.net/1.13.6/css/jquery.dataTables.min.css" rel="stylesheet" />
<link href="https://cdn.datatables.net/datetime/1.5.4/css/dataTables.dateTime.min.css" rel="stylesheet" />
<script src="https://code.jquery.com/jquery-3.7.1.js"></script>
<script src="https://cdn.datatables.net/2.1.8/js/dataTables.js"></script>

@*Excel Export*@

<script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.10.1/jszip.min.js"></script>

@*PDF Export*@
<script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.2.7/pdfmake.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.2.7/vfs_fonts.js"></script>
<script src="https://cdn.datatables.net/buttons/3.2.0/js/buttons.dataTables.js"></script>

@*Export Button Features*@

<script src="https://cdn.datatables.net/buttons/3.2.0/js/dataTables.buttons.js"></script>
<link href="https://cdn.datatables.net/buttons/3.2.0/css/buttons.dataTables.min.css" />
<script src="https://cdn.datatables.net/buttons/3.2.0/js/buttons.html5.min.js"></script>
<script src="https://cdn.datatables.net/buttons/2.4.1/js/buttons.print.min.js"></script>

@*Search Panes*@
<script src="https://cdn.datatables.net/searchpanes/2.3.3/js/dataTables.searchPanes.js"></script>
<script src="https://cdn.datatables.net/searchpanes/2.3.3/js/searchPanes.dataTables.js"></script>

@*Select Data Tables*@
<script src="https://cdn.datatables.net/select/2.1.0/js/dataTables.select.js"></script>
<script src="https://cdn.datatables.net/select/2.1.0/js/select.dataTables.js"></script>

@*Date Picker*@
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.2/moment.min.js"></script>
<script src="https://cdn.datatables.net/datetime/1.5.4/js/dataTables.dateTime.min.js"></script>

<!-- Alerts -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script nonce="myScript">

    var tbId = document.getElementById('tbId');
    var tbMac = document.getElementById('tbMac');
    var tbType = document.getElementById('tbType');
    var tbOld = document.getElementById('tbOld');
    var tbNew = document.getElementById('tbNew');
    var tbDate = document.getElementById('tbDate');
    var tbTime = document.getElementById('tbTime');
    var tbBy = document.getElementById('tbBy');
    var tbUid = document.getElementById('tbUid');

    $("[type='text']").keypress(function (e) {
        e.preventDefault();
    });

    $(document).ready(function () {

        let startDate, endDate;

        DataTable.ext.search.push(function (settings, data, dataIndex) {
            let start = startDate.val();
            let end = endDate.val();
            let date = new Date(data[7]);

            start = start ? new Date(start).setHours(0, 0, 0, 0) : null;
            end = end ? new Date(end).setHours(23, 59, 59, 999) : null;

            if (
                (start === null && end === null) ||
                (start === null && date <= end) ||
                (start <= date && end === null) ||
                (start <= date && date <= end)
            ) {
                return true;
            }
            return false;

        });

        startDate = new DateTime('#start', {
            format: 'MM/DD/YYYY'
        });

        endDate = new DateTime('#end', {
            format: 'MM/DD/YYYY'
        });

        var table = new DataTable('#tblAudit', {
            layout: {
                top: 'pageLength',
                topStart: {
                    buttons: [

                        {
                            extend: 'excel',
                            className: 'btn btn-outline-success btn-sm px-3 py-2',
                            text: 'Excel',
                            title: 'User Audit Logs',
                        },

                        {
                            extend: 'pdfHtml5',
                            className: 'btn btn-outline-danger btn-sm px-3 py-2 mx-1',
                            text: 'PDF',
                            title: 'User Audit Logs',
                            orientation: 'landscape',
                            pageSize: 'LEGAL',

                            messageTop: function () {
                                const now = new Date();
                                const month = now.toLocaleString('default', {
                                    month: 'long'
                                });
                                var dateFormat = month + ' ' + now.getDate() + ', ' + now.getFullYear();
                                var dateFirst = startDate.val() != null ? 'From ' + startDate.val() + '\n' : "";
                                var dateLast = endDate.val() != null ? 'Until ' + endDate.val() + '\n' : "";
                                return {
                                    text: [{
                                        alignment: 'center',
                                        italics: false,
                                        fontSize: 7,
                                        bold: true,
                                        margin: [0.0],
                                        text: dateFirst + dateLast + ' ' + 'As of ' + dateFormat
                                    }],
                                    margin: 5
                                };
                            },

                            customize: function (doc) {
                                doc.styles.tableHeader.fillColor = '#4CAF50';
                                doc.styles.tableHeader.fontSize = 10;
                                doc.styles.tableHeader.bold = true;
                                doc.styles.tableHeader.color = '#000000';
                                doc.styles.tableHeader.alignment = 'left';

                                //doc.content[1].table.widths = ['1%', '10%', '6%', '18%', '18%', '10%', '10%', '5%', '5%', '10%'. '5%', '1%'];
                                //doc.content[1].table.headerRows = 0;
                            },

                        }

                    ],
                },
            },

            autoWidth: false,

            columns: [
                { width: '1%' },
                { width: '10%' },
                { width: '6%' },
                { width: '18%' },
                { width: '18%' },
                { width: '10%' },
                { width: '10%' },
                { width: '5%' },
                { width: '5%' },
                { width: '10%' },
                { width: '5%' },
                { width: '1%' },
            ],

            initComplete: function () {
                //Action ID Input Filter
                this.api()
                    .columns([0])
                    .every(function () {
                        var column = this;

                        // Create input element
                        var input = document.createElement('input');
                        input.placeholder = "SEARCH IN ID";
                        input.setAttribute("class", "form-control form-control-sm h-25");
                        tbId.replaceWith(input);

                        // Event listener for user input
                        input.addEventListener('keyup', () => {
                            if (column.search() !== this.value) {
                                column.search(input.value).draw();
                            }
                        });
                    });

                //MAC Address Filter
                this.api()
                    .columns([1])
                    .every(function () {
                        var column = this;

                        var select = $('<select class="form-control form-control-sm"><option value="">--SELECT MAC ADDRESS--</option></select>')
                            .appendTo($('#tbMac').empty())
                            .on('change', function () {
                                if (column.search() !== this.value) {
                                    column.search(this.value).draw();
                                }

                                column
                                    .search(val ? '^' + val + '$' : '', true, false)
                                    .draw();
                            });

                        column.data().unique().sort().each(function (d, j) {
                            var val = $('<div/>').html(d).text();
                            select.append('<option value="' + val + '">' + val + '</option>');
                        });
                    });

                //Action Type Filter
                this.api()
                    .columns([2])
                    .every(function () {
                        var column = this;

                        var select = $('<select class="form-control form-control-sm"><option value="">--SELECT ACTION TYPE--</option></select>')
                            .appendTo($('#tbType').empty())
                            .on('change', function () {
                                if (column.search() !== this.value) {
                                    column.search(this.value).draw();
                                }

                                column
                                    .search(val ? '^' + val + '$' : '', true, false)
                                    .draw();
                            });

                        column.data().unique().sort().each(function (d, j) {
                            var val = $('<div/>').html(d).text();
                            select.append('<option value="' + val + '">' + val + '</option>');
                        });
                    });

                //Time Action Filter
                this.api()
                    .columns([8])
                    .every(function () {
                        var column = this;

                        var select = $('<select class="form-control form-control-sm"><option value="">--Time Action--</option></select>')
                            .appendTo($('#tbTime').empty())
                            .on('change', function () {
                                if (column.search() !== this.value) {
                                    column.search(this.value).draw();
                                }

                                column
                                    .search(val ? '^' + val + '$' : '', true, false)
                                    .draw();
                            });

                        column.data().unique().sort().each(function (d, j) {
                            var val = $('<div/>').html(d).text();
                            select.append('<option value="' + val + '">' + val + '</option>');
                        });
                    });

                //Action By Filter
                this.api()
                    .columns([10])
                    .every(function () {
                        var column = this;

                        var select = $('<select class="form-control form-control-sm"><option value="">--SELECT ACTION BY--</option></select>')
                            .appendTo($('#tbBy').empty())
                            .on('change', function () {
                                if (column.search() !== this.value) {
                                    column.search(this.value).draw();
                                }

                                column
                                    .search(val ? '^' + val + '$' : '', true, false)
                                    .draw();
                            });

                        column.data().unique().sort().each(function (d, j) {
                            var val = $('<div/>').html(d).text();
                            select.append('<option value="' + val + '">' + val + '</option>');
                        });
                    });

                //UID Input Filter
                this.api()
                    .columns([11])
                    .every(function () {
                        var column = this;

                        // Create input element
                        var input = document.createElement('input');
                        input.placeholder = "SEARCH IN UID";
                        input.setAttribute("class", "form-control form-control-sm h-25");
                        tbUid.replaceWith(input);

                        // Event listener for user input
                        input.addEventListener('keyup', () => {
                            if (column.search() !== this.value) {
                                column.search(input.value).draw();
                            }
                        });
                    });

            }
        });

        document.querySelectorAll('#start, #end').forEach((element) => {
            element.addEventListener('change', () => table.draw());
        });

    });

    const loader = document.getElementById('loader')

    document.addEventListener("DOMContentLoaded", function () {
        loader.style.display = "none";
    })

</script>