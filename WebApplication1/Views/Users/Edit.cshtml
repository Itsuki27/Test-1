﻿@model WebApplication1.Models.User

@{
    ViewBag.Title = "Edit";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div id="loader" class="loader"></div>

    <div class="form-horizontal d-flex px-4">
        <div class="col-7 d-none d-xl-none d-lg-block p-4">
            <img src="~/Resources/imgHandshake.jpg" alt="Image" class="img-fluid rounded-3 h-100 ">
        </div>
        <div class="col-7 d-none d-xl-block p-4">
            <img src="~/Resources/imgHandshake.jpg" alt="Image" class="img-fluid rounded-3">
        </div>

        <div class="m-auto">
            @Html.HiddenFor(model => model.UserId)
            <h2 class="text-center">Edit User</h2>
            <hr />
            <div class="d-flex flex-row">
                <div class="mx-2">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-12 mb-2">
                            @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                        </div>
                    </div>



                    <div class="form-group">
                        <label for="PasswordHash">Password</label>
                        <div class="col-md-12 mb-2">
                            @Html.EditorFor(model => model.PasswordHash, new { htmlAttributes = new { @class = "form-control", type = "password" } })
                            @Html.ValidationMessageFor(model => model.PasswordHash, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label for="ConfirmPassword">Confirm Password</label>
                        <div class="col-md-12 mb-1 px-6">
                            @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", type = "password" } })
                            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>

                <div class="mx-2">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-12 mb-2">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-12 mb-2">
                            <div class="checkbox col-12">
                                @Html.EditorFor(model => model.IsActive, new { htmlAttributes = new { @class = "form-control border-1 col-md-12" } })
                                @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <label for="Department">Department</label>
                        <div class="col-md-12 mb-1 px-6">
                            @Html.DropDownListFor(model => model.DEPT_ID,
                                          (IEnumerable<SelectListItem>)ViewBag.DropUser,
                                          "--Select Department--",
                                          new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.DEPT_ID, "", new { @class = "text-danger" })

                        </div>
                    </div>

                </div>
            </div>

            <div class="form-group d-flex flex-column text-center">
                <div class="col-md-12 justify-content-center">
                    <input type="submit" value="Save Changes" class="btn btn-success my-2" />
                </div>
                <div class="col-md-12 justify-content-center">
                    @Html.ActionLink("Back to List", "Index", new { area = "" }, new { @class = "btn btn-outline-primary" })
                </div>
            </div>

        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script>
    const loader = document.getElementById('loader');

    document.addEventListener("DOMContentLoaded", function () {
        loader.style.display = "none";
    });
</script>