@model IEnumerable<WebApplication1.Models.User>

@{
    ViewBag.Title = "Account List";
}

<div id="loader" class="loader"></div>

<div class="form-horizontal d-flex flex-column p-5">
    <h2 class="text-center">User Masterlist</h2>

    <hr />

    <div class="d-flex flex-column small">
        <h6 class="text-center">Table Filters</h6>
        <form id="fields">
            <div class="filters d-flex flex-row gap-1 col-12 small justify-content-center my-auto">
                <input class="col-2" id="tbUname" />
                <input class="col-2 my-auto" id="tbEmail" />
                @*<p class="col-2" id="tbActive">ISACTIVE</p>*@
                <p class="col-2 my-auto" id="tbDept">DEPARTMENT</p>

                @*<p id="btClearAll" class="btn btn-outline-danger my-auto" onclick="clearFilters()">Clear Filters</p>*@
            </div>
            <div class="d-flex flex-row gap-3 justify-content-center">
                <div class="d-flex flex-row datePicker">
                    <p class="my-auto mx-3">From:</p>
                    <input type="text" id="start" name="start" placeholder="MM/DD/YYYY" class="date-range-filter form-control form-control-xs">
                </div>
                <div class="d-flex flex-row datePicker">
                    <p class="my-auto mx-3">To:</p>
                    <input type="text" id="end" name="end" placeholder="MM/DD/YYYY" class="date-range-filter form-control form-control-xs">
                </div>
                @*<div class="btn btn-outline-primary" id="btClearDates">Clear Dates</div>*@
            </div>
        </form>
        <div class="text-center my-2">
            <p id="btClearAll" class="btn btn-danger my-auto" onclick="clearFilters()">Clear Filters</p>
        </div>
    </div>

    <table id="tblUsers" class="table table-bordered table-striped table-light small">
        <thead>
            <tr>
                <th>@Html.DisplayName("ID")</th>
                <th>@Html.DisplayName("USERNAME")</th>
                <th>@Html.DisplayName("EMAIL")</th>
                <th>@Html.DisplayName("DATE_CREATED")</th>
                <th>@Html.DisplayName("ISACTIVE")</th>
                <th>@Html.DisplayName("DEPARTMENT")</th>
                <th>@Html.DisplayName("ACTIONS")</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.UserId)</td>
                    <td>@Html.DisplayFor(modelItem => item.Username)</td>
                    <td>@Html.DisplayFor(modelItem => item.Email)</td>
                    <td>@Html.DisplayFor(modelItem => item.CreatedDate)</td>
                    <td>@Html.DisplayFor(modelItem => item.IsActive)</td>
                    <td>@Html.DisplayFor(modelItem => item.DEPT.DEPT1)</td>
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { id = item.UserId }, new { @class = "btn btn-success" })
                        @Html.ActionLink("Details", "Details", new { id = item.UserId }, new { @class = "btn btn-primary" })
                        @Html.ActionLink("Delete", "Delete", new { id = item.UserId }, new { @class = "btn btn-danger" })
                    </td>

                </tr>
            }
        </tbody>
        <tfoot>
            <tr>
                <th>@Html.DisplayName("ID")</th>
                <th>@Html.DisplayName("USERNAME")</th>
                <th>@Html.DisplayName("EMAIL")</th>
                <th>@Html.DisplayName("DATE_CREATED")</th>
                <th>@Html.DisplayName("ISACTIVE")</th>
                <th>@Html.DisplayName("DEPARTMENT")</th>
                <th>@Html.DisplayName("ACTIONS")</th>
            </tr>
        </tfoot>
    </table>

</div>

@section Scripts{

    @if (TempData["UserLogin"] != null)
    {
        @Html.Raw(TempData["UserLogin"])
    }

    @if (TempData["UserEdit"] != null)
    {
        @Html.Raw(TempData["UserEdit"])
    }

    @if (TempData["UserDelete"] != null)
    {
        @Html.Raw(TempData["UserDelete"])
    }

}

<script nonce="myScript">

    var tbUname = document.getElementById('tbUname');
    var tbEmail = document.getElementById('tbEmail');
    var tbActive = document.getElementById('tbActive');
    var tbDept = document.getElementById('tbDept');

    //function clearDates() {
    //    var table = new DataTable('#tblUsers');
    //    document.getElementById("start").value = null;
    //    document.getElementById("end").value = null;
    //    start.value = null;
    //    end.value = null;

    //    table.search('');
    //    table.columns().search('').draw();
    //};

    //function clearFilters() {
    //    tbUname.value = null;

    //    $('thead select').val('');
    //}

    //function clearFilters() {
    //    var table = new DataTable('#tblUsers');

    //    table.search('');
    //    table.columns().search('').draw();

    //    ////document.getElementById('tbUname').value = "";
    //    ////document.getElementById('tbUname').textContent = "";
    //    ////document.getElementById('tbUname').text = "";
    //    ////document.getElementById('tbUname').style.border = "black 5px solid";
    //    //tbUname.innerHTML = "<span></span>";
    //    //$('#tbUname').style.border = "black 5px solid";
    //    //console.log("test: " + tbUname.value);

    //    document.getElementById('fields').reset();

    //    //$('#start').change();
    //    //$('#end').change();
    //    //document.querySelectorAll('#start, #end').trigger("change");
    //};

    function clearFilters() {
        window.location.reload()
    }

    //$('#btClearAll').on('click', function () {
    //    alert('A');
    //})

    $("[type='text']").keypress(function (e) {
        e.preventDefault();
    });

    $(document).ready(function () {

        let startDate, endDate;

        DataTable.ext.search.push(function (settings, data, dataIndex) {
            let start = startDate.val();
            let end = endDate.val();
            let date = new Date(data[3]);

            start = start ? new Date(start).setHours(0, 0, 0, 0) : null;
            end = end ? new Date(end).setHours(23, 59, 59, 999) : null;

            if (
                (start === null && end === null) ||
                (start === null && date <= end) ||
                (start <= date && end === null) ||
                (start <= date && date <= end)
            ) {
                return true;
            }
            return false;

        });

        startDate = new DateTime('#start', {
            format: 'MM/DD/YYYY'
        });

        endDate = new DateTime('#end', {
            format: 'MM/DD/YYYY'
        });

        var table = new DataTable('#tblUsers', {
            layout: {
                top: 'pageLength',
                topStart: {
                    buttons: [

                        { extend: 'excel', className: 'btn btn-outline-success btn-sm px-3 py-2' },
                        { extend: 'pdf', orientation: 'landscape', className: 'btn btn-outline-danger btn-sm px-3 py-2 mx-1' }

                    ],
                },
            },

            initComplete: function () {
                //Username Input Filter
                this.api()
                    .columns([1])
                    .every(function () {
                        var column = this;

                        // Create input element
                        var input = document.createElement('input');
                        input.placeholder = "SEARCH BY USERNAME";
                        input.setAttribute("class", "form-control form-control-sm h-25");
                        tbUname.replaceWith(input);

                        // Event listener for user input
                        input.addEventListener('keyup', () => {
                            if (column.search() !== this.value) {
                                column.search(input.value).draw();
                            }
                        });

                    });

                //Email Input Filter
                this.api()
                    .columns([2])
                    .every(function () {
                        var column = this;

                        // Create input element
                        var input = document.createElement('input');
                        input.placeholder = "SEARCH BY EMAIL";
                        input.setAttribute("class", "form-control form-control-sm h-25");
                        tbEmail.replaceWith(input);

                        // Event listener for user input
                        input.addEventListener('keyup', () => {
                            if (column.search() !== this.value) {
                                column.search(input.value).draw();
                            }
                        });
                    });

                ////IsActive Dropdown Filter
                //this.api()
                //    .columns([4])
                //    .every(function () {
                //        var column = this;

                //        var select = $('<select class="form-control form-control-sm"><option value="">--SELECT ACTIVITY STATUS WIP--</option></select>')
                //            .appendTo($('#tbActive').empty())
                //            .on('change', function () {
                //                if (column.search() !== this.value) {
                //                    column.search(this.value).draw();
                //                }

                //                column
                //                    .search(val ? '^' + val + '$' : '', true, false)
                //                    .draw();
                //            });

                //        column.data().unique().sort().each(function (d, j) {
                //            var val = $('<div/>').html(d).text();
                //            select.append('<option value="' + val + '">' + val + '</option>');
                //        });
                //    });

                //Department Dropdown Filter
                this.api()
                    .columns([5])
                    .every(function () {
                        var column = this;

                        var select = $('<select class="form-control form-control-sm"><option value="">--SELECT DEPARTMENT--</option></select>')
                            .appendTo($('#tbDept').empty())
                            .on('change', function () {
                                if (column.search() !== this.value) {
                                    column.search(this.value).draw();
                                }

                                column
                                    .search(val ? '^' + val + '$' : '', true, false)
                                    .draw();
                            });

                        column.data().unique().sort().each(function (d, j) {
                            var val = $('<div/>').html(d).text();
                            select.append('<option value="' + val + '">' + val + '</option>');
                        });
                    });
            }

        });

        document.querySelectorAll('#start, #end').forEach((element) => {
            element.addEventListener('change', () => table.draw());
        });

    });

    const loader = document.getElementById('loader')

    document.addEventListener("DOMContentLoaded", function () {
        loader.style.display = "none";
    });

</script>

@*<script type="text/javascript">
        function preventBack() {
            window.history.forward();
        }
        //setTimeout("preventBack()", 0);
        //window.onunload = function () { null };
        preventBack();
        window.onload = preventBack();
        window.onpageshow = function (evt) {
            if (evt.persisted) {
                preventBack()
            }
        }
        window.onunload = function () {
            void (0)
        }
    </script>*@