
@{

    ViewBag.Title = "Inactive Employees Report";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



<section class="content-header">
    <div class="row">
        <div class="col-sm-6">
            <h4>
                <u><strong>@ViewBag.Title</strong></u>
            </h4>
        </div>
        <div class="col-lg-6 col-sm-6 d-flex align-items-center justify-content-end mt-2">
            <ol class="breadcrumb float-sm-right">
                <li class="breadcrumb-item">Dashboard</li>
                <li class="breadcrumb-item">Reports</li>
                <li class="breadcrumb-item">Employee</li>
                <li class="breadcrumb-item">@ViewBag.Title</li>
            </ol>
        </div>
    </div>
</section>
<br />

<div class="main-table ml-xl-3 mr-xl-3 ml-lg-3 mr-lg-3">

    <div class="box-header with-border">
        <div class="row">
            <div class="col-lg-3">
                <label class="control-label">From</label>
                <div class="form-group ">
                    <input type="text" id="min-date"
                           class="date-range-filter form-control form-control-xs"
                           placeholder="MM/DD/YYYY">
                </div>
            </div>
            <div class="col-lg-3">
                <label class="control-label">To</label>
                <div class="form-group">
                    <input type="text"
                           id="max-date"
                           class="date-range-filter form-control form-control-sm"
                           placeholder="MM/DD/YYYY">
                </div>
            </div>

            <div class="col-lg-3">
                <div class="form-group  ">
                    <label class="control-label">Department</label>
                    <span id="Department" class="form control"></span>
                </div>
            </div>
            <div class="col-lg-3">
                <div class="form-group  ">
                    <label class="control-label">Position</label>
                    <span id="position" class="form control"></span>
                </div>
            </div>
        </div>
    </div>
    <hr />
    <div class="">
        <div id="example1_wrapper" class="dataTables_wrapper dt-bootstrap">
            <table id="inactiveTable" class="table table-bordered table-hover dataTable table-responsive-sm">
                <thead>
                    <tr>
                        <th>No</th>
                        <th>Employee No</th>
                        <th>ID No</th>
                        <th>Name</th>
                        <th>Designation</th>
                        <th>Department</th>
                        <th>Date of Separation</th>
                        <th>Reason</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>1</td>
                        <td>EMP001</td>
                        <td>ID001</td>
                        <td>John Doe</td>
                        <td>Software Engineer</td>
                        <td>IT Department</td>
                        <td>01/15/2024</td>
                        <td>Retirement</td>
                    </tr>
                    <tr>
                        <td>2</td>
                        <td>EMP002</td>
                        <td>ID002</td>
                        <td>Jane Smith</td>
                        <td>HR Manager</td>
                        <td>Human Resources</td>
                        <td>03/10/2024</td>
                        <td>Resignation</td>
                    </tr>
                    <tr>
                        <td>3</td>
                        <td>EMP003</td>
                        <td>ID003</td>
                        <td>Michael Johnson</td>
                        <td>Accountant</td>
                        <td>Finance</td>
                        <td>06/25/2024</td>
                        <td>End of Contract</td>
                    </tr>
                    <tr>
                        <td>4</td>
                        <td>EMP004</td>
                        <td>ID004</td>
                        <td>Emily Davis</td>
                        <td>Marketing Specialist</td>
                        <td>Marketing</td>
                        <td>08/15/2024</td>
                        <td>Termination</td>
                    </tr>
                    <tr>
                        <td>5</td>
                        <td>EMP005</td>
                        <td>ID005</td>
                        <td>William Brown</td>
                        <td>Operations Manager</td>
                        <td>Operations</td>
                        <td>11/20/2024</td>
                        <td>Retirement</td>
                    </tr>
                </tbody>
            </table>

        </div>
    </div>
</div>

@section scripts {

    <link rel="stylesheet" href="https://cdn.datatables.net/1.13.6/css/jquery.dataTables.min.css">
    <link rel="stylesheet" href="https://cdn.datatables.net/buttons/2.4.1/css/buttons.dataTables.min.css">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.4.1/js/dataTables.buttons.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.10.1/jszip.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.2.7/pdfmake.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.2.7/vfs_fonts.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.4.1/js/buttons.html5.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.4.1/js/buttons.print.min.js"></script>




    <script nonce="MyScript">
            $(document).ready(function () {
        var table = $('#inactiveTable').DataTable({
            dom: "<'row'<'col-sm-4'B> <'col-sm-4 text-center 'l><'col-sm-4'f>>" +
                "<'row'<'col-sm-12'tr>>" +
                "<'row'<'col-sm-6'i><'col-sm-6'p>>",
			'order': [[3, 'asc']],
			bAutoWidth: false,
			aoColumns: [
				{ sWidth: '5%' },
				{ sWidth: '10%' },
				{ sWidth: '10%' },
				{ sWidth: '20%' },
				{ sWidth: '15%' },
				{ sWidth: '15%' },
				{ sWidth: '12%' },
				{ sWidth: '13%' }
            ],
            columnDefs: [
                {
                    targets: 6,
                    width: '20%',
                    type: 'date',
                }
            ],
            buttons: [
				{

                    extend: 'excel',

                    title: 'Inactive Employees',
                    className: 'btn btn-primary',
                    messageBottom: null,
                    text: 'Excel',
                    columns: ':not(:first-child)',
                    className: 'btn btn-primary',
                },
                {
                    extend: 'pdfHtml5', className: 'btn btn-primary', title: 'Inactive Employees ', text: 'PDF',
                    messageTop: function () {
                        const now = new Date();
                        const month = now.toLocaleString('default', { month: 'long' });
                        var formateddate2 = month + ' ' + now.getDate() + ', ' + now.getFullYear();
                        return {
                            text: [{ alignment: 'center', italics: false, fontsize: 12, Margin: [0.0], text: '@Session["CompanyName"]' + " \n " + 'Inactive Employees' + " \n " + 'As of ' + formateddate2 }],
                            margin: 5
                        }
                    },
                    customize: function (win) {

                        //style customization
                        win.content.splice(0, 1);
                        win.styles.tableHeader.fillColor = '#adbce6';
                        win.styles.tableHeader.color = 'black';
                        win.styles.tableHeader.alignment = 'left';
                        win.styles.tableBodyEven.alignment = 'left';
                        win.styles.tableBodyOdd.fillColor = 'white';
                        win.styles.tableHeader.alignment = 'center';
                        win.pageMargins = [20, 20, 20, 20];
                        //Col specific size each
                        win.content[1].table.widths = ['8%', '10%', '10%', '25%', '15%', '15%', '10%', '10%'];
                        win.defaultStyle.fontSize = 9;
                        win.styles.tableHeader.fontSize = 10;

                        //remove repeating header
                        //win.content[1].table.headerRows = 0;

                        const now = new Date();
                        const month = now.toLocaleString('default', { month: 'long' }); //ECMAScript Internationalization API ('long' uses the full name of the month, 'short' for the short name, and 'narrow' for a more minimal version, such as the first letter in alphabetical languages.)
                        var formateddate = month + ' ' + now.getDate() + ', ' + now.getFullYear() + ' ' + now.toLocaleTimeString().replace(/:\d+ /, ' ');

                        //specific column allignment
                        var rowCount = win.content[1].table.body.length;
                        for (i = 1; i < rowCount; i++) {
                            win.content[1].table.body[i][0].alignment = 'center';

                        };



                        // Change dataTable layout (Table styling)
                        // To use predefined layouts uncomment the line below and comment the custom lines below
                        // doc.content[0].layout = 'lightHorizontalLines'; // noBorders , headerLineOnly
                        var objLayout = {};
                        objLayout['hLineWidth'] = function (i) { return .5; };
                        objLayout['vLineWidth'] = function (i) { return .5; };
                        objLayout['hLineColor'] = function (i) { return '#aaa'; };
                        objLayout['vLineColor'] = function (i) { return '#aaa'; };
                        objLayout['paddingLeft'] = function (i) { return 4; };
                        objLayout['paddingRight'] = function (i) { return 4; };
                        win.content[1].layout = objLayout;


                        win['header'] = (function () {
                            return {

                                columns: [{ alignment: 'left', fontSize: 9, margin: [20, 5], italics: false, text: 'Reports | Inactive Employees ' }]
                            }
                        });

                        win['footer'] = (function (page, pages) {
                            return {
                                columns: [
                                    { alignment: 'left', italics: false, text: 'Run Date: ' + " " + formateddate, fontSize: 9, margin: [20, 0] },

                                    { alignment: 'right', text: [{ text: 'Page ' + page.toString() + ' of ' + pages.toString(), italics: false, fontSize: 9, }], margin: [20, 0] }
                                ]
                            }

                        })
                    },
                     pageSize: 'A4',
                }],

         initComplete: function () {
                this.api().columns([5]).every(function () {
                    var column2 = this;

                    var select2 = $('<select class="form-control form-control-sm"><option value="">Show All</option></select>')
                        .appendTo($('#Department').empty())
                        .on('change', function () {
                            var val = $.fn.dataTable.util.escapeRegex(
                                $(this).val()
                            );

                            column2
                                .search(val ? '^' + val + '$' : '', true, false)
                                .draw();
                        });

                    column2.data().unique().sort().each(function (d, j) {
                        var val = $('<div/>').html(d).text();
                        select2.append('<option value="' + val + '">' + val + '</option>');
                    });
				});

				this.api().columns([4]).every(function () {
					var column2 = this;

					var select2 = $('<select class="form-control form-control-sm"><option value="">Show All</option></select>')
						.appendTo($('#position').empty())
						.on('change', function () {
							var val = $.fn.dataTable.util.escapeRegex(
								$(this).val()
							);

							column2
								.search(val ? '^' + val + '$' : '', true, false)
								.draw();
						});

					column2.data().unique().sort().each(function (d, j) {
						var val = $('<div/>').html(d).text();
						select2.append('<option value="' + val + '">' + val + '</option>');
					});
				});


                this.api().columns([5]).every(function () {
                    var column2 = this;

                    var select2 = $('<select class="form-control form-control-sm"><option value="">Show All</option></select>')
                        .appendTo($('#Gender').empty())
                        .on('change', function () {
                            var val = $.fn.dataTable.util.escapeRegex(
                                $(this).val()
                            );

                            column2
                                .search(val ? '^' + val + '$' : '', true, false)
                                .draw();
                        });

                    column2.data().unique().sort().each(function (d, j) {
                        var val = $('<div/>').html(d).text();
                        select2.append('<option value="' + val + '">' + val + '</option>');
                    });
                });
            }
        });

        table.on('order.dt search.dt', function () {
            table.column(0, { search: 'applied', order: 'applied' }).nodes().each(function (cell, i) {
                cell.innerHTML = i + 1;
                table.cell(cell).invalidate('dom');
            });
        }).draw();



        $.fn.dataTable.ext.search.push(
            function (settings, data, dataIndex) {
                var min = $('#min-date').val();
                var max = $('#max-date').val();
                var DateAdded = data[6] || 0;

                // var DateAdded = 17
                if (
                    (min == "" || max == "")
                    ||
                    (moment(DateAdded).isSameOrAfter(min) && moment(DateAdded).isSameOrBefore(max))
                    //17 =
                ) {
                    return true;
                }
                return false;
            }
        );
        //$("#ddlfield").change({ onSelect: function () { table.draw(); } });
        $("#min-date").datepicker({ onSelect: function () { table.draw(); }, changeMonth: true, changeYear: true });
        $("#max-date").datepicker({ onSelect: function () { table.draw(); }, changeMonth: true, changeYear: true });
        // Event listener to the two range filtering inputs to redraw on input
        $('#min-date, #max-date').change(function () {
            console.log("success");
            table.draw();
        });
    });

    </script>
}